
// page inners

.page-wrapper{
  flex: 1;
  position: relative;
  padding: 4px;
}
.page-inner{
  padding-top: 50px;
  padding-bottom: 50px;
}

.sections-wrapper{
  min-height: 20px;
}

.empty-column{
  background-color: lightgray;
  position: relative;
  &::before{
    position: absolute;
    top: 50%;
    left: 50%;
    content: "*";
  }
  .column-cell-wrapper {
    height: 20px;
  }
  .column-cell {
    width: 100%;
  }
}

.element:after{
  content: '';
  display:block;
  clear: both;
}


// specific element type

.text-wrapper{
  min-height: 20px;
}

// max-width for images inside columns
$widths:(1: 30, 2: 80, 3: 130, 4: 180, 5: 230, 6: 280, 7: 330, 8: 380, 9: 430, 10: 480, 11: 530, 12: 580);
@each $i, $width in $widths {
  @media only screen and (min-width: 596px) {
    .large-#{$i} img {
      max-width: #{$width}px;
    }
  }
}

// highlighting system
$highlightShadow: 0 0 0 4px #3ae4e3;
$currentShadow: 0 0 0 4px #e12de4;
:not(.gu-unselectable){ // if we are dragging, none if this should apply
  .on-page.highlight--page:not(.on-section):not(.on-column):not(.on-element){
    box-shadow: $highlightShadow;
    z-index: 10;
  }
  .on-section:not(.on-column):not(.on-element) .highlight--section{
    position: relative;
    box-shadow: $highlightShadow;
    z-index: 10;
  }
  .on-column:not(.on-element) .highlight--column{
    position: relative;
    box-shadow: $highlightShadow;
    z-index: 10;
  }
  .on-element .highlight--element {
    position: relative;
    box-shadow: $highlightShadow inset;
    &.img-element{
      box-shadow: $highlightShadow;
    }
    z-index: 10;
  }
}
.page.current-element{
  position: relative;
  box-shadow: $currentShadow;
  z-index: 5;
}
.current-element{
  position: relative;
  box-shadow: $currentShadow inset;
  &.img-element{
    box-shadow: $currentShadow;
  }
  &.row{
    box-shadow: $currentShadow;
  }
  z-index: 5;
}


// controls system
.element-control{
  color: white;
}

