
.element:after{
  content: '';
  display:block;
  clear: both;
}
.page{
  flex: 1;
  position: relative;
}
.page-inner{
  padding-top: 50px;
  padding-bottom: 50px;
}
.empty-column{
  background-color: lightgray;
  position: relative;
  &::before{
    position: absolute;
    top: 50%;
    left: 50%;
    content: "*";
  }
}


// max-width for images inside columns
$widths:(one: 30, two: 80, three: 130, four: 180, five: 230, six: 280, seven: 330, eight: 380, nine: 430, ten: 480, eleven: 530, twelve: 580);
@each $word, $width in $widths {
  .#{$word} img {
    max-width: #{$width}px;
  }
}

// highlighting system
$highlightShadow: 0 0 0 4px #3ae4e3;
$currentShadow: 0 0 0 4px #e12de4;
:not(.gu-unselectable){ // if we are dragging, none if this should apply
  .on-page.highlight--page:not(.on-section):not(.on-column):not(.on-element){
    box-shadow: $highlightShadow inset;
    z-index: 10;
  }
  .on-section:not(.on-column):not(.on-element) .highlight--section{
    position: relative;
    box-shadow: $highlightShadow;
    z-index: 10;
  }
  .on-column:not(.on-element) .highlight--column{
    position: relative;
    box-shadow: $highlightShadow;
    z-index: 10;
  }
  .on-element .highlight--element {
    position: relative;
    box-shadow: $highlightShadow inset;
    &.element-img{
      box-shadow: $highlightShadow;
    }
    z-index: 10;
  }
}
.page.current-element{
  position: relative;
  box-shadow: $currentShadow inset;
  z-index: 5;
}
.current-element{
  position: relative;
  box-shadow: $currentShadow inset;
  &.element-img{
    box-shadow: $currentShadow;
  }
  z-index: 5;
}

.wrap-ink-container{
  //margin: 10px;
}

.paragraphe-element{
  min-height: 20px;
}

.element-control{
  color: white;
}
